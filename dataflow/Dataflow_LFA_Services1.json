{
	"name": "Dataflow_LFA_Services1",
	"properties": {
		"folder": {
			"name": "LFA Services"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Dataset_CSV_LFA_Invoice",
						"type": "DatasetReference"
					},
					"name": "DatasetCSVLFAInvoice1"
				},
				{
					"dataset": {
						"referenceName": "Dataset_GIS_View_SF_LFA_Invoices",
						"type": "DatasetReference"
					},
					"name": "GISViewSFLFAInvoices1"
				},
				{
					"dataset": {
						"referenceName": "Dataset_CSV_LFA_Invoice",
						"type": "DatasetReference"
					},
					"name": "DatasetCSVLFAInvoice2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Dataset_CSV_SF_LFA_Invoices_Matching_SF_vs_GFS",
						"type": "DatasetReference"
					},
					"name": "CSVSFLFAInvoicesMatchingSFvsGFS"
				},
				{
					"dataset": {
						"referenceName": "Dataset_CSV_SF_LFA_Invoices_Matching_GFS_vs_SF",
						"type": "DatasetReference"
					},
					"name": "CSVSFLFAInvoicesMatchingGFSvsSF"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumnPurchaseOrderNumber1"
				},
				{
					"name": "LookupGISViewSFLFAInvoices"
				},
				{
					"name": "LookupLFAInvoice"
				},
				{
					"name": "DerivedColumnPurchaseOrderNumber2"
				},
				{
					"name": "DerivedColumnGISViewSFLFAInvoices1InvoiceDesc"
				},
				{
					"name": "SelectCSVSFLFAInvoicesMatchingGFSvsSF"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {LFA_Work_Plan__r.Id} as string,",
				"          {LFA_Work_Plan__r.Name} as string,",
				"          Id as string,",
				"          GFS_External_Id__c as string,",
				"          Name as string,",
				"          Type__c as string,",
				"          Status__c as string,",
				"          Total_Value__c as string,",
				"          GFS_Budget_Centre__c as string,",
				"          GFS_Country__c as string,",
				"          GFS_Notification_Status__c as string,",
				"          GFS_Supplier__c as string,",
				"          GFS_Timeout_Days__c as string,",
				"          {LFA_Work_Plan__r.Labor_PO__c} as string,",
				"          {LFA_Work_Plan__r.ODC_PO__c} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DatasetCSVLFAInvoice1",
				"source(output(",
				"          GFS_External_ID as string,",
				"          GFS_PurchaseOrderNumber as string,",
				"          GFS_InvoiceNumber as string,",
				"          GFS_InvoiceApprovalStatus as string,",
				"          GFS_CurrentLastApprover as string,",
				"          GFS_HoldDescription as string,",
				"          GFS_InvoiceDescription as string,",
				"          GFS_InvoiceAmount as decimal(18,2),",
				"          GFS_InvoiceDate as timestamp,",
				"          GFS_InvoiceCreationDate as timestamp,",
				"          GFS_PaymentDate as timestamp,",
				"          GFS_PaymentStatus as string,",
				"          GFS_PaymentDueDate as timestamp,",
				"          GFS_BudgetCenter as string,",
				"          GFS_Country as string,",
				"          GFS_NotificationStatus as string,",
				"          GFS_Supplier as string,",
				"          GFS_TimeoutDays as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> GISViewSFLFAInvoices1",
				"source(output(",
				"          {LFA_Work_Plan__r.Id} as string,",
				"          {LFA_Work_Plan__r.Name} as string,",
				"          Id as string,",
				"          GFS_External_Id__c as string,",
				"          Name as string,",
				"          Type__c as string,",
				"          Status__c as string,",
				"          Total_Value__c as string,",
				"          GFS_Budget_Centre__c as string,",
				"          GFS_Country__c as string,",
				"          GFS_Notification_Status__c as string,",
				"          GFS_Supplier__c as string,",
				"          GFS_Timeout_Days__c as string,",
				"          {LFA_Work_Plan__r.Labor_PO__c} as string,",
				"          {LFA_Work_Plan__r.ODC_PO__c} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DatasetCSVLFAInvoice2",
				"DatasetCSVLFAInvoice1 derive(PurchaseOrderNumber = case(Type__c == 'Services',{LFA_Work_Plan__r.Labor_PO__c},{LFA_Work_Plan__r.ODC_PO__c})) ~> DerivedColumnPurchaseOrderNumber1",
				"DerivedColumnPurchaseOrderNumber1, DerivedColumnGISViewSFLFAInvoices1InvoiceDesc lookup(GFS_External_Id__c == GFS_External_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupGISViewSFLFAInvoices",
				"DerivedColumnGISViewSFLFAInvoices1InvoiceDesc, DerivedColumnPurchaseOrderNumber2 lookup(GFS_External_ID == GFS_External_Id__c,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupLFAInvoice",
				"DatasetCSVLFAInvoice2 derive(PurchaseOrderNumber = case(Type__c == 'Services',{LFA_Work_Plan__r.Labor_PO__c},{LFA_Work_Plan__r.ODC_PO__c})) ~> DerivedColumnPurchaseOrderNumber2",
				"GISViewSFLFAInvoices1 derive(GFS_InvoiceDescription = replace(GFS_InvoiceDescription, '\\n', ' ')) ~> DerivedColumnGISViewSFLFAInvoices1InvoiceDesc",
				"LookupLFAInvoice select(mapColumn(",
				"          SF_WorkplanId = {LFA_Work_Plan__r.Id},",
				"          SF_WorkplanName = {LFA_Work_Plan__r.Name},",
				"          SF_InvoiceId = Id,",
				"          SF_ExternalId = GFS_External_Id__c,",
				"          SF_PurchaseOrderNumber = PurchaseOrderNumber,",
				"          SF_InvoiceNumber = Name,",
				"          SF_InvoiceType = Type__c,",
				"          SF_InvoiceStatus = Status__c,",
				"          SF_InvoiceAmount = Total_Value__c,",
				"          SF_BudgetCentre = GFS_Budget_Centre__c,",
				"          SF_Country = GFS_Country__c,",
				"          SF_NotificationStatus = GFS_Notification_Status__c,",
				"          SF_Supplier = GFS_Supplier__c,",
				"          SF_TimeoutDays = GFS_Timeout_Days__c,",
				"          GFS_External_ID,",
				"          GFS_PurchaseOrderNumber,",
				"          GFS_InvoiceNumber,",
				"          GFS_PaymentStatus,",
				"          GFS_InvoiceApprovalStatus,",
				"          GFS_CurrentLastApprover,",
				"          GFS_HoldDescription,",
				"          GFS_InvoiceDescription,",
				"          GFS_PaymentDueDate,",
				"          GFS_InvoiceAmount,",
				"          GFS_InvoiceDate,",
				"          GFS_InvoiceCreationDate,",
				"          GFS_PaymentDate,",
				"          GFS_BudgetCenter,",
				"          GFS_Country,",
				"          GFS_NotificationStatus,",
				"          GFS_Supplier,",
				"          GFS_TimeoutDays",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCSVSFLFAInvoicesMatchingGFSvsSF",
				"LookupGISViewSFLFAInvoices sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SF_WorkplanId as string,",
				"          SF_WorkplanName as string,",
				"          SF_InvoiceId as string,",
				"          SF_ExternalId as string,",
				"          SF_PurchaseOrderNumber as string,",
				"          SF_InvoiceNumber as string,",
				"          SF_InvoiceType as string,",
				"          SF_InvoiceStatus as string,",
				"          SF_InvoiceAmount as string,",
				"          SF_BudgetCentre as string,",
				"          SF_Country as string,",
				"          SF_NotificationStatus as string,",
				"          SF_Supplier as string,",
				"          SF_TimeoutDays as string,",
				"          GFS_External_ID as string,",
				"          GFS_PurchaseOrderNumber as string,",
				"          GFS_InvoiceNumber as string,",
				"          GFS_PaymentStatus as string,",
				"          GFS_InvoiceApprovalStatus as string,",
				"          GFS_CurrentLastApprover as string,",
				"          GFS_HoldDescription as string,",
				"          GFS_InvoiceDescription as string,",
				"          GFS_PaymentDueDate as string,",
				"          GFS_InvoiceAmount as string,",
				"          GFS_InvoiceDate as string,",
				"          GFS_InvoiceCreationDate as string,",
				"          GFS_PaymentDate as string,",
				"          GFS_BudgetCenter as string,",
				"          GFS_Country as string,",
				"          GFS_NotificationStatus as string,",
				"          GFS_Supplier as string,",
				"          GFS_TimeoutDays as string",
				"     ),",
				"     partitionFileNames:['SF_LFA_Invoices_Matching_SF_vs_GFS.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> CSVSFLFAInvoicesMatchingSFvsGFS",
				"SelectCSVSFLFAInvoicesMatchingGFSvsSF sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SF_WorkplanId as string,",
				"          SF_WorkplanName as string,",
				"          SF_InvoiceId as string,",
				"          SF_ExternalId as string,",
				"          SF_PurchaseOrderNumber as string,",
				"          SF_InvoiceNumber as string,",
				"          SF_InvoiceType as string,",
				"          SF_InvoiceStatus as string,",
				"          SF_InvoiceAmount as string,",
				"          SF_BudgetCentre as string,",
				"          SF_Country as string,",
				"          SF_NotificationStatus as string,",
				"          SF_Supplier as string,",
				"          SF_TimeoutDays as string,",
				"          GFS_External_ID as string,",
				"          GFS_PurchaseOrderNumber as string,",
				"          GFS_InvoiceNumber as string,",
				"          GFS_PaymentStatus as string,",
				"          GFS_InvoiceApprovalStatus as string,",
				"          GFS_CurrentLastApprover as string,",
				"          GFS_HoldDescription as string,",
				"          GFS_InvoiceDescription as string,",
				"          GFS_PaymentDueDate as string,",
				"          GFS_InvoiceAmount as string,",
				"          GFS_InvoiceDate as string,",
				"          GFS_InvoiceCreationDate as string,",
				"          GFS_PaymentDate as string,",
				"          GFS_BudgetCenter as string,",
				"          GFS_Country as string,",
				"          GFS_NotificationStatus as string,",
				"          GFS_Supplier as string,",
				"          GFS_TimeoutDays as string",
				"     ),",
				"     partitionFileNames:['SF_LFA_Invoices_Matching_GFS_vs_SF.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> CSVSFLFAInvoicesMatchingGFSvsSF"
			]
		}
	}
}